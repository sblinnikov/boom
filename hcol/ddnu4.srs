*deck ddnu4
      subroutine  ddnu4(ri,rj,rk,yj,yk,rsj,rsk,ydotj,ydotk,yf
     1                 ,djk,amujk,amusqjk,keyflux)
c-----------------------------------------------------
c     ddnu4 is a modified version of ddnu2
c     with drj, drk averaging
c-----------------------------------------------------
*call implic
*call const
      data  fddlow /1d-16/
      data  epsocc /1d-26/
      data  epsydot/1d-10/
      data  epsy   /1d3/
c
      occuj=yj/yf
      occuk=yk/yf
      ojkmx=max(occuj,occuk)
      yjkmx=max(yj,yk)
      if(ojkmx.le.epsocc.and.yjkmx.le.epsy)  then
                                             djk=zero
                                             amujk=zero
                                             amusqjk=shlish
                                             goto 799
                                             endif
      drj=0.5d0*(rj-ri)
      drk=0.5d0*(rk-rj)
      dr=drj+drk
      if(keyflux.eq.0) then
                       rsm=((rsj+ydotj/yj)*drk+(rsk+ydotk/yk)*drj)/dr
                       djk=shlish*clite**2/rsm
                       amujk=zero
                       amusqjk=shlish
                       go to 799
                       endif
c
      ym=(yk*drj+yj*drk)/dr
      dy=abs(yk-yj)
      dydr=dy/dr
      if(ojkmx.ge.epsydot)  then
                            ydotm=(ydotj*drk+ydotk*drj)/dr
                            else
                            ydotm=0d0
                            endif
      rsm=(rsj*drk+rsk*drj)/dr
      totrate=ydotm+rsm*ym
      dydr=max(dydr,(fddlow*totrate/clite),fddlow)
      if(totrate.gt.0d0) then
                         u=clite*dydr/totrate
                         else
                         u=0d0
                         endif
      f=(2d0+u)/(u*(3d0+u)+6d0)
      amusqjk=f*(1d0+f*u**2)
c     amujk .ne. f and not defined here so we set it to zero
      amujk=0d0
      if (totrate.ne.0d0) then
         djk=f*clite**2*ym/totrate
      else
         djk=clite * ym / dydr
	amusqjk=1d0
      endif
  799 continue
      return
      end
