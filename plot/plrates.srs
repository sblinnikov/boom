*deck plrates
      program plrates
      implicit none
*call dim
*call par 
*call const
*call keyeos
*call chemp
*call names
      integer :: ntype, ntry
      real*8 :: x, y, enung, x1, x2, y1, y2, x3, y3
      real*8 :: ro, t, fxn, fxp, fxa, fxh, a
      real*8 :: e, p, c, dtdro, dtde, dpde, dsdro, dsde, dpdro
      print *, 'plot type'
      read *, ntype
      tabname='../eos_files/eostab.6.3'
      ntry=1
      open(unit=7,file='plot.out',status='unknown'
     1,access='sequential',form='formatted')
      select case (ntype)
      case (1)
         write (7,*) '#proc areadef'
         write (7,*) '   xrange: ', 0, 180
         write (7,*) '   yrange: ', 0, 25
         write (7,*) '   frame: yes'
         write (7,*) '#proc getdata'
         do enung=0,180,2.0
            call ratemt(1d12, 12d0, 10d0, 10d0, 0.7d0, 0d0, 0d0, 0d0, 
     &           enung, 2d0, 12d0, 
     &           0d0, 0d0, 0d0, x, y)
            call ratebrem(1d12, 10d0, 10d0, 10d0, 0.7d0, enung, 
     &           2d0, x1, y1)
            write (7,*) enung, x, y/clite, x1, y1/clite
         enddo
      case (2)
         write (7,*) '#proc areadef'
         write (7,*) '   xrange: ', 5, 200
         write (7,*) '   yrange: ', 1e+14, 1e+21
         write (7,*) '   xscaletype: log'
         write (7,*) '   yscaletype: log'
         write (7,*) '   frame: yes'
         write (7,*) '#proc getdata'
	 ro = 1e+11
	 t = 1e+11
	 ye = 0.05
	 keyeos = 7
	 call state (ro, e, t, p, s, c, dtdro, dtde, dpdro, dpde,
     &	 	 dsdro, dsde, a, z, ye, ynu, fxn, fxp, fxa, fxh,
     &		 2)
         print *,t,t/tmev,fxn,fxp,fxa,fxh, xmue, xmuhat, 
     &	 fxn*exp(-(xmuhat-1.293)*tmev/t)
         do enung=2.0,200,2.0
            call emisabs(enung, ro, t/tmev, 
     *          fxn, fxp, fxh, a, z,
     *           xmue, xmuhat, x1, y1, x2, y2)
            call ratehp3(fxp, fxh, a, z, 
     *           xmuhat, xmue, t/tmev, ro, 
     &		 enung, one, x3, y3)
c units in ergs s^(-1) g^(-1) MeV^(-1) to match Bruenn 1984
	print *, x1, x1 *clite*enung**2/facdis/ro * enung * emev
         if (ntry .eq. 1) then	
            write (7,*) 'data: ' , enung, 
     &	    x1 *clite*enung**2/facdis/ro * enung * emev,
     &	    x2 *clite*enung**2/facdis/ro * enung * emev,
     &	    x3 * enung / ro * emev

	    ntry=0
         else
            write (7,*) ' ',  enung, 
     &	    x1*clite*enung**2/facdis/ro * enung * emev,
     &	    x2*clite*enung**2/facdis/ro * enung * emev,
     &	    x3 * enung / ro * emev
         endif
         enddo
	 write (7,*) '#proc lineplot'
	 write (7,*) ' xfield: 1'
	 write (7,*) ' yfield: 2'
      case (3)
         write (7,*) '#proc areadef'
         write (7,*) '   xrange: ', 5, 200
         write (7,*) '   yrange: ', 1e+14, 1e+21
         write (7,*) '   xscaletype: log'
         write (7,*) '   yscaletype: log'
         write (7,*) '   frame: yes'
         write (7,*) '#proc getdata'
	 ro = 1d+11
	 t = 1.38*tmev
	 ye = 0.39
	 keyeos = 7
	 call state (ro, e, t, p, s, c, dtdro, dtde, dpdro, dpde,
     &	 	 dsdro, dsde, a, z, ye, ynu, fxn, fxp, fxa, fxh,
     &		 2)
         do enung=2.0,200,2.0
            call emisabs(enung, ro, t/tmev, 
     *          fxn, fxp, fxh, a, z,
     *           xmue, xmuhat, x1, y1, x2, y2)
            call ratehp3(fxp, fxh, a, z, 
     *           xmuhat, xmue, t/tmev, ro, 
     &		 enung, one, x3, y3)
c units in ergs s^(-1) g^(-1) MeV^(-1) to match Bruenn 1984
         if (ntry .eq. 1) then	
            write (7,*) 'data: ' , enung, y1, y2, y3/clite
	    ntry=0
         else
            write (7,*) ' ',  enung, y1, y2, y3/clite
         endif
         enddo
	 write (7,*) '#proc lineplot'
	 write (7,*) ' xfield: 1'
	 write (7,*) ' yfield: 2'
      end select
      end
